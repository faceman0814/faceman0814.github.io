{"title":"使用Hugo搭建个人博客","uid":"e39417a60f2c78600e5ff58d1d0519aa","slug":"使用Hugo搭建个人博客","date":"2024-11-26T00:00:00.000Z","updated":"2024-12-24T01:56:35.265Z","comments":true,"path":"api/articles/使用Hugo搭建个人博客.json","keywords":null,"cover":"https://github.com/faceman0814/picx-images-hosting/raw/master/20241114/hugo.1ovgdt2n7y.webp","content":"<p>先来说说写这篇博客的缘由</p>\n<p>一个程序员最好的门面是啥？除了github拥有star数高的开源项目之外当然是个人博客，无论是技术积累还是找工作，有一个属于自己的个人博客无疑是加分项，现在github上有各种开源的博客系统，优点是功能很多，但都有个问题就是大，我之前用Java的oneblog项目部署了一个博客，但由于我是买的阿里云2核2g服务器，部署上去之后由于太大系统崩了，我重启了3次才在docker重启之前关掉，就很尴尬。后面想了个办法是部署到自己的电脑的虚拟机上，然后通过frp+nginx映射出去，但问题又来了，我是笔记本没有办法保证像服务器一样一直运行着，于是，我摆烂了。后面刷B站的时候看到了数字游牧人的一个视频，了解到了hugo这个东西，于是我琢磨了一天弄了个博客出来，踩了一些坑，所以有了今天这篇文章，补充完整给新手小白们避坑。</p>\n<h1 id=\"必要条件\"><a href=\"#必要条件\" class=\"headerlink\" title=\"必要条件\"></a>必要条件</h1><p>安装和部署网上教程很多，我这里就不多赘述了。</p>\n<p><a href=\"https://juejin.cn/post/7265268463256616972?from=search-suggest\">在github.io安装部署个人博客hugo</a></p>\n<h1 id=\"Tips\"><a href=\"#Tips\" class=\"headerlink\" title=\"Tips\"></a>Tips</h1><h2 id=\"1-自定义域名\"><a href=\"#1-自定义域名\" class=\"headerlink\" title=\"1.自定义域名\"></a>1.自定义域名</h2><p>前提：需要有一个自己的域名，如果想以https访问还需要配置证书。</p>\n<p>如果不想用github.io做结尾，可以到github项目的Page页设置自域名（Custom domain），然后在域名服务商那里添加解析记录，解析类型选择CNAME，主机记录填@，记录值填你的github.io的域名，保存即可。我因为解析的是泛域名，然后又用的二级域名所以我用nginx做了一次转发，不这么做nginx配置可以忽略。</p>\n<h3 id=\"1-配置nginx代理\"><a href=\"#1-配置nginx代理\" class=\"headerlink\" title=\"1.配置nginx代理\"></a>1.配置nginx代理</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">error_log /var/log/nginx/error.log;</span><br><span class=\"line\"></span><br><span class=\"line\">    server &#123;</span><br><span class=\"line\">        listen 80;</span><br><span class=\"line\">        listen 443 ssl;</span><br><span class=\"line\">        server_name blog.faceman.cn; # 你的域名</span><br><span class=\"line\">        ssl_protocols TLSv1.2 TLSv1.1 TLSv1; </span><br><span class=\"line\">  </span><br><span class=\"line\">        ssl_certificate      /domains/fullchain.pem; # 证书位置</span><br><span class=\"line\">        ssl_certificate_key  /domains/key.key; # 证书位置</span><br><span class=\"line\">        ssl_prefer_server_ciphers on; </span><br><span class=\"line\">        ssl_session_timeout  5m;</span><br><span class=\"line\">        if ($server_port = 80) &#123;</span><br><span class=\"line\">        rewrite ^(.*)$ https://$host$1 permanent;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        location / &#123;</span><br><span class=\"line\">            proxy_pass https://faceman0814.github.io; # 映射地址</span><br><span class=\"line\">            proxy_set_header Host $host;</span><br><span class=\"line\">            proxy_set_header X-Real-IP $remote_addr;</span><br><span class=\"line\">            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class=\"line\">            root /home/web/;</span><br><span class=\"line\">            index index.php;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n\n<p>重启nginx即可</p>\n<h3 id=\"2-设置自域名\"><a href=\"#2-设置自域名\" class=\"headerlink\" title=\"2.设置自域名\"></a>2.设置自域名</h3><p><img src=\"https://github.com/faceman0814/picx-images-hosting/raw/master/20241114/1731135427227.32hzhuedns.webp\" alt=\"1731135427227\"></p>\n<h2 id=\"2-部署脚本\"><a href=\"#2-部署脚本\" class=\"headerlink\" title=\"2.部署脚本\"></a>2.部署脚本</h2><p>为了简化部署流程，我写了一套Windows版本的脚本分享给大家</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">param(</span><br><span class=\"line\">    [string]$commitMessage = &quot;博客更新&quot;</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"># 输出部署更新信息</span><br><span class=\"line\">Write-Host &quot;正在部署到GitHub...&quot; -ForegroundColor Green</span><br><span class=\"line\"></span><br><span class=\"line\"># 构建项目</span><br><span class=\"line\">&amp; hugo</span><br><span class=\"line\"></span><br><span class=\"line\"># 进入Public文件夹</span><br><span class=\"line\">Set-Location public</span><br><span class=\"line\"></span><br><span class=\"line\"># 将更改添加到git</span><br><span class=\"line\">git add .</span><br><span class=\"line\"></span><br><span class=\"line\"># 提交更改</span><br><span class=\"line\">Write-Host $commitMessage -ForegroundColor Green</span><br><span class=\"line\">git commit -m $commitMessage</span><br><span class=\"line\"></span><br><span class=\"line\"># 拉取最新的远程仓库更改以避免冲突</span><br><span class=\"line\">git pull origin main</span><br><span class=\"line\"></span><br><span class=\"line\"># 推送源和构建仓库</span><br><span class=\"line\">git push origin main</span><br><span class=\"line\"></span><br><span class=\"line\"># 返回到项目根目录</span><br><span class=\"line\">Set-Location ..</span><br></pre></td></tr></table></figure>\n\n<p>根目录下面保存为deploy.ps1(powershell脚本格式)</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//在根目录下运行</span><br><span class=\"line\">/deploy.ps1 &quot;提交内容&quot; //默认提交内容为博客更新</span><br></pre></td></tr></table></figure>\n\n<p>我用的ananke主题有些小问题，比如：</p>\n<ul>\n<li>github地址生成的时候会有些乱码导致跳转404</li>\n<li>静态图片部署的时候会被损坏</li>\n</ul>\n<p>我在脚本处理，如果你们没有这个问题可以略过。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">param(</span><br><span class=\"line\">    [string]$commitMessage = &quot;博客更新&quot;</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"># 输出部署更新信息</span><br><span class=\"line\">Write-Host &quot;正在部署到GitHub...&quot; -ForegroundColor Green</span><br><span class=\"line\"></span><br><span class=\"line\"># 构建项目</span><br><span class=\"line\">&amp; hugo</span><br><span class=\"line\"></span><br><span class=\"line\"># 进入Public文件夹</span><br><span class=\"line\">Set-Location public</span><br><span class=\"line\"></span><br><span class=\"line\"># 扫描所有文件并替换指定字符串</span><br><span class=\"line\">$replacements = @&#123;</span><br><span class=\"line\">    &quot;https://github.com/faceman0814%25!%28EXTRA%20%3cnil%3e%29&quot; = &quot;https://github.com/faceman0814&quot;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"># 扫描所有文件并替换指定字符串</span><br><span class=\"line\">Get-ChildItem -Recurse | Where-Object &#123; !$_.PSIsContainer &#125; | ForEach-Object &#123;</span><br><span class=\"line\">    $content = Get-Content $_.FullName -Raw</span><br><span class=\"line\">    foreach ($oldText in $replacements.Keys) &#123;</span><br><span class=\"line\">        $newText = $replacements[$oldText]</span><br><span class=\"line\">        $content = $content -replace [regex]::Escape($oldText), $newText</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    Set-Content $_.FullName -Value $content</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"># 复制 images 文件夹，使用相对路径回退到根目录再访问static/images</span><br><span class=\"line\">$sourcePath = &quot;..\\static\\images&quot;</span><br><span class=\"line\">$destinationPath = &quot;.\\images&quot;</span><br><span class=\"line\">Copy-Item -Path $sourcePath\\* -Destination $destinationPath -Force -Recurse</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 将更改添加到git</span><br><span class=\"line\">git add .</span><br><span class=\"line\"></span><br><span class=\"line\"># 提交更改</span><br><span class=\"line\">Write-Host $commitMessage -ForegroundColor Green</span><br><span class=\"line\">git commit -m $commitMessage</span><br><span class=\"line\"></span><br><span class=\"line\"># 拉取最新的远程仓库更改以避免冲突</span><br><span class=\"line\">git pull origin main</span><br><span class=\"line\"></span><br><span class=\"line\"># 推送源和构建仓库</span><br><span class=\"line\">git push origin main</span><br><span class=\"line\"></span><br><span class=\"line\"># 返回到项目根目录</span><br><span class=\"line\">Set-Location ..</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"页脚加运行时间\"><a href=\"#页脚加运行时间\" class=\"headerlink\" title=\"页脚加运行时间\"></a>页脚加运行时间</h2><p>在页脚加入代码</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div class=&quot;footer-container&quot;&gt;</span><br><span class=\"line\">      &lt;span id=&quot;sitetime&quot;&gt;载入运行时间...&lt;/span&gt;</span><br><span class=\"line\"> &lt;/div&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">  function siteTime() &#123;</span><br><span class=\"line\">      var seconds = 1000;</span><br><span class=\"line\">      var minutes = seconds * 60;</span><br><span class=\"line\">      var hours = minutes * 60;</span><br><span class=\"line\">      var days = hours * 24;</span><br><span class=\"line\">      var years = days * 365;</span><br><span class=\"line\">      var today = new Date();</span><br><span class=\"line\">      var startYear = 2024;</span><br><span class=\"line\">      var startMonth = 11;</span><br><span class=\"line\">      var startDate = 8;</span><br><span class=\"line\">      var startHour = 14;</span><br><span class=\"line\">      var startMinute = 15;</span><br><span class=\"line\">      var startSecond = 11;</span><br><span class=\"line\">      var todayYear = today.getFullYear();</span><br><span class=\"line\">      var todayMonth = today.getMonth() + 1;</span><br><span class=\"line\">      var todayDate = today.getDate();</span><br><span class=\"line\">      var todayHour = today.getHours();</span><br><span class=\"line\">      var todayMinute = today.getMinutes();</span><br><span class=\"line\">      var todaySecond = today.getSeconds();</span><br><span class=\"line\">      var t1 = Date.UTC(startYear, startMonth, startDate, startHour, startMinute, startSecond);</span><br><span class=\"line\">      var t2 = Date.UTC(todayYear, todayMonth, todayDate, todayHour, todayMinute, todaySecond);</span><br><span class=\"line\">      var diff = t2 - t1;</span><br><span class=\"line\">      var diffYears = Math.floor(diff / years);</span><br><span class=\"line\">      var diffDays = Math.floor((diff / days) - diffYears * 365);</span><br><span class=\"line\">      var diffHours = Math.floor((diff - (diffYears * 365 + diffDays) * days) / hours);</span><br><span class=\"line\">      var diffMinutes = Math.floor((diff - (diffYears * 365 + diffDays) * days - diffHours * hours) /</span><br><span class=\"line\">          minutes);</span><br><span class=\"line\">      var diffSeconds = Math.floor((diff - (diffYears * 365 + diffDays) * days - diffHours * hours -</span><br><span class=\"line\">          diffMinutes * minutes) / seconds);</span><br><span class=\"line\">      if (startYear == todayYear) &#123;</span><br><span class=\"line\">          //document.getElementById(&quot;year&quot;).innerHTML = todayYear;</span><br><span class=\"line\">          document.getElementById(&quot;sitetime&quot;).innerHTML = &quot;博客已运行 &quot; + diffDays + &quot; 天 &quot; + diffHours +</span><br><span class=\"line\">              &quot; 小时 &quot; + diffMinutes + &quot; 分钟 &quot; + diffSeconds + &quot; 秒&quot;;</span><br><span class=\"line\">      &#125; else &#123;</span><br><span class=\"line\">          //document.getElementById(&quot;year&quot;).innerHTML = startYear + &quot; - &quot; + todayYear;</span><br><span class=\"line\">          document.getElementById(&quot;sitetime&quot;).innerHTML = &quot;博客已运行 &quot; + diffYears + &quot; 年 &quot; + diffDays +</span><br><span class=\"line\">              &quot; 天 &quot; + diffHours + &quot; 小时 &quot; + diffMinutes + &quot; 分钟 &quot; + diffSeconds + &quot; 秒&quot;;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  setInterval(siteTime, 1000);</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"添加访问量计数工具\"><a href=\"#添加访问量计数工具\" class=\"headerlink\" title=\"添加访问量计数工具\"></a>添加访问量计数工具</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script async src=&quot;https://busuanzi.icodeq.com/busuanzi.pure.mini.js&quot;&gt;&lt;/script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">本文总阅读量 &lt;span id=&quot;busuanzi_value_page_pv&quot;&gt;&lt;/span&gt; 次</span><br><span class=\"line\"></span><br><span class=\"line\">本站总访问量 &lt;span id=&quot;busuanzi_value_site_pv&quot;&gt;&lt;/span&gt; 次</span><br><span class=\"line\"></span><br><span class=\"line\">本站总访客数 &lt;span id=&quot;busuanzi_value_site_uv&quot;&gt;&lt;/span&gt; 人</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"遇到的一些坑\"><a href=\"#遇到的一些坑\" class=\"headerlink\" title=\"遇到的一些坑\"></a>遇到的一些坑</h2><h3 id=\"中文博客内容截断过长\"><a href=\"#中文博客内容截断过长\" class=\"headerlink\" title=\"中文博客内容截断过长\"></a>中文博客内容截断过长</h3><p>默认情况下，Hugo 可能会根据单词边界来截断摘要，这在处理英文时比较合适，但对于中文等没有明显空格分隔的语言则不太适用。就可能会导致摘要部分过长，导致观感不好，面对这种情况有两个解决方案。</p>\n<h4 id=\"方案-1：自定义-Summary-分隔符\"><a href=\"#方案-1：自定义-Summary-分隔符\" class=\"headerlink\" title=\"方案 1：自定义 Summary 分隔符\"></a>方案 1：自定义 Summary 分隔符</h4><p>你可以在文章中手动定义一个分隔符来指示摘要结束的位置。例如，在 Markdown 文件中使用<code>&lt;!--more--&gt;</code>标签来定义摘要的结束。</p>\n<h4 id=\"方案-2：调整-Summary-长度\"><a href=\"#方案-2：调整-Summary-长度\" class=\"headerlink\" title=\"方案 2：调整 .Summary 长度\"></a>方案 2：调整 <strong>.Summary</strong> 长度</h4><p>如果不希望在每篇文章中手动加入分隔符，你可以通过配置文件来全局调整摘要的长度。<br>配置文件（config.toml）示例：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[summary]</span><br><span class=\"line\">  length = 120  # 控制摘要的字符数，默认是 70</span><br></pre></td></tr></table></figure>\n\n<p>这样设置后，Hugo 将会自动截取每篇文章的前 120 个字符作为摘要。</p>\n<h4 id=\"方案-3：使用-CSS-控制显示内容\"><a href=\"#方案-3：使用-CSS-控制显示内容\" class=\"headerlink\" title=\"方案 3：使用 CSS 控制显示内容\"></a>方案 3：使用 CSS 控制显示内容</h4><p>如果你仍然想在前端控制显示的文字数量（尤其是为了保持布局的一致性），可以使用 CSS 的 <strong>text-overflow</strong> 属性。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.nested-copy-line-height &#123;</span><br><span class=\"line\">  display: -webkit-box;</span><br><span class=\"line\">  -webkit-box-orient: vertical;</span><br><span class=\"line\">  -webkit-line-clamp: 3; /* 限制在3行内 */</span><br><span class=\"line\">  overflow: hidden;</span><br><span class=\"line\">  text-overflow: ellipsis;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>以上方法可以选择适合你网站需求的一种或几种结合起来使用。如果选择 CSS 方式，请确保它不会影响用户体验和内容的可访问性。</p>\n","text":"先来说说写这篇博客的缘由 一个程序员最好的门面是啥？除了github拥有star数高的开源项目之外当然是个人博客，无论是技术积累还是找工作，有一个属于自己的个人...","permalink":"/post/使用Hugo搭建个人博客","photos":[],"count_time":{"symbolsCount":"6.7k","symbolsTime":"6 mins."},"categories":[{"name":"DevOps","slug":"DevOps","count":11,"path":"api/categories/DevOps.json"}],"tags":[{"name":"Hugo","slug":"Hugo","count":1,"path":"api/tags/Hugo.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%BF%85%E8%A6%81%E6%9D%A1%E4%BB%B6\"><span class=\"toc-text\">必要条件</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Tips\"><span class=\"toc-text\">Tips</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-%E8%87%AA%E5%AE%9A%E4%B9%89%E5%9F%9F%E5%90%8D\"><span class=\"toc-text\">1.自定义域名</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E9%85%8D%E7%BD%AEnginx%E4%BB%A3%E7%90%86\"><span class=\"toc-text\">1.配置nginx代理</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-%E8%AE%BE%E7%BD%AE%E8%87%AA%E5%9F%9F%E5%90%8D\"><span class=\"toc-text\">2.设置自域名</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-%E9%83%A8%E7%BD%B2%E8%84%9A%E6%9C%AC\"><span class=\"toc-text\">2.部署脚本</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%A1%B5%E8%84%9A%E5%8A%A0%E8%BF%90%E8%A1%8C%E6%97%B6%E9%97%B4\"><span class=\"toc-text\">页脚加运行时间</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%B7%BB%E5%8A%A0%E8%AE%BF%E9%97%AE%E9%87%8F%E8%AE%A1%E6%95%B0%E5%B7%A5%E5%85%B7\"><span class=\"toc-text\">添加访问量计数工具</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%81%87%E5%88%B0%E7%9A%84%E4%B8%80%E4%BA%9B%E5%9D%91\"><span class=\"toc-text\">遇到的一些坑</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%AD%E6%96%87%E5%8D%9A%E5%AE%A2%E5%86%85%E5%AE%B9%E6%88%AA%E6%96%AD%E8%BF%87%E9%95%BF\"><span class=\"toc-text\">中文博客内容截断过长</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%96%B9%E6%A1%88-1%EF%BC%9A%E8%87%AA%E5%AE%9A%E4%B9%89-Summary-%E5%88%86%E9%9A%94%E7%AC%A6\"><span class=\"toc-text\">方案 1：自定义 Summary 分隔符</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%96%B9%E6%A1%88-2%EF%BC%9A%E8%B0%83%E6%95%B4-Summary-%E9%95%BF%E5%BA%A6\"><span class=\"toc-text\">方案 2：调整 .Summary 长度</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%96%B9%E6%A1%88-3%EF%BC%9A%E4%BD%BF%E7%94%A8-CSS-%E6%8E%A7%E5%88%B6%E6%98%BE%E7%A4%BA%E5%86%85%E5%AE%B9\"><span class=\"toc-text\">方案 3：使用 CSS 控制显示内容</span></a></li></ol></li></ol></li></ol></li></ol>","author":{"name":"FaceMan","slug":"blog-author","avatar":"https://github.com/faceman0814/picx-images-hosting/raw/master/20241114/image.2vermeukr5.webp","link":"/","description":"从0开始，直到1。","socials":{"github":"https://github.com/faceman0814","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/manmanzainuli","juejin":"","customs":{"bokeyuan":{"icon":"/svg/bokeyuan.svg","link":"https://www.cnblogs.com/FaceMan"}}}},"mapped":true,"hidden":false,"prev_post":{"title":"Switch模拟器-YuZu","uid":"61d5ab16d3669ffca8733aef334b5fbf","slug":"yuzu","date":"2024-11-26T00:00:00.000Z","updated":"2024-12-24T01:56:35.265Z","comments":true,"path":"api/articles/yuzu.json","keywords":null,"cover":"https://github.com/faceman0814/picx-images-hosting/raw/master/20241115/image.7p3mk4lrbz.webp","text":"一般工作吃午饭的时候，我喜欢打开B站找个下饭直播看看，一般会选择塞尔达主播王薯条，有一天突然看到一条弹幕在问主播用的模拟器还是主机，这让我产生了兴趣，于是在某一...","permalink":"/post/yuzu","photos":[],"count_time":{"symbolsCount":646,"symbolsTime":"1 mins."},"categories":[{"name":"日常","slug":"日常","count":2,"path":"api/categories/日常.json"}],"tags":[{"name":"生活随笔","slug":"生活随笔","count":1,"path":"api/tags/生活随笔.json"},{"name":"Swtich","slug":"Swtich","count":1,"path":"api/tags/Swtich.json"}],"author":{"name":"FaceMan","slug":"blog-author","avatar":"https://github.com/faceman0814/picx-images-hosting/raw/master/20241114/image.2vermeukr5.webp","link":"/","description":"从0开始，直到1。","socials":{"github":"https://github.com/faceman0814","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/manmanzainuli","juejin":"","customs":{"bokeyuan":{"icon":"/svg/bokeyuan.svg","link":"https://www.cnblogs.com/FaceMan"}}}},"feature":true},"next_post":{"title":"动态API集成源码解析版","uid":"82af2d180e848d28b222db96dd62b1e7","slug":"动态API集成源码解析版","date":"2024-11-24T00:00:00.000Z","updated":"2024-12-24T01:56:35.266Z","comments":true,"path":"api/articles/动态API集成源码解析版.json","keywords":null,"cover":"https://github.com/faceman0814/picx-images-hosting/raw/master/20241114/Swagger.9rjf6latxr.webp","text":"在日常开发时，想要用到Swagger就必须得创建控制器创建接口文档，一般业务处理都不会在控制器中处理，我们一般会再创建另一个类来处理业务逻辑，每次创建都两个类就...","permalink":"/post/动态API集成源码解析版","photos":[],"count_time":{"symbolsCount":"16k","symbolsTime":"15 mins."},"categories":[{"name":".Net","slug":"Net","count":4,"path":"api/categories/Net.json"}],"tags":[{"name":"Swagger","slug":"Swagger","count":2,"path":"api/tags/Swagger.json"}],"author":{"name":"FaceMan","slug":"blog-author","avatar":"https://github.com/faceman0814/picx-images-hosting/raw/master/20241114/image.2vermeukr5.webp","link":"/","description":"从0开始，直到1。","socials":{"github":"https://github.com/faceman0814","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/manmanzainuli","juejin":"","customs":{"bokeyuan":{"icon":"/svg/bokeyuan.svg","link":"https://www.cnblogs.com/FaceMan"}}}},"feature":false}}
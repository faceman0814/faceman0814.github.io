{"title":"Ubuntu一键安装卸载docker和dockercompose","uid":"fec2c7ee16664a58fd23e5c35dbd3596","slug":"Ubuntu一键安装卸载docker","date":"2024-11-18T16:00:00.000Z","updated":"2024-11-30T04:34:27.681Z","comments":true,"path":"api/articles/Ubuntu一键安装卸载docker.json","keywords":null,"cover":"https://github.com/faceman0814/picx-images-hosting/raw/master/20241114/docker.4g4ilvor9o.webp","content":"<p>在新建的服务器上，我们一般会用几条命令来下载安装docker和docker-compose，这里为了避免每次都去搜索安装命令，所以写成脚本，本文仅支持Ubuntu\\CentOS。</p>\n<h2 id=\"一、docker是什么？\"><a href=\"#一、docker是什么？\" class=\"headerlink\" title=\"一、docker是什么？\"></a>一、docker是什么？</h2><p>Docker是一个开源的容器化平台，用于构建、部署和管理应用程序。它采用了轻量级的容器技术，可以在不同的操作系统上运行，并提供了一种将应用程序及其依赖项打包到可移植的容器中的方式。</p>\n<p>以下是Docker的一些重要特点和概念：</p>\n<ul>\n<li>容器化：Docker利用Linux内核的容器功能来隔离应用程序及其依赖项。每个容器都是一个独立的运行环境，具有自己的文件系统、进程空间和资源限制。容器可以快速启动、停止和迁移，而且相互之间彼此隔离，避免了应用程序之间的冲突和依赖问题。</li>\n<li>镜像：Docker使用镜像来构建容器。镜像是一个只读的模板，包含了应用程序运行所需的所有文件系统、库和依赖项。通过使用Dockerfile定义构建步骤，可以创建自定义的镜像。镜像可以从Docker Hub等镜像仓库中获取，也可以通过构建自己的镜像进行定制。</li>\n<li>容器注册表：Docker Hub是Docker官方的公共镜像注册表，提供了大量的基础镜像供用户使用。除此之外，还有其他的公共和私有镜像注册表，用户可以在其中存储和分享自己的镜像。</li>\n<li>Docker引擎：Docker引擎是运行和管理容器的核心组件。它包括一个守护进程（Docker daemon）和一个命令行客户端（Docker CLI）。守护进程负责构建、运行和管理容器，而命令行客户端提供了交互式的接口来与守护进程进行通信。</li>\n<li>编排和管理工具：Docker提供了一系列的编排和管理工具，用于简化多个容器的部署和管理。例如，Docker Compose允许通过一个YAML文件描述多个容器的关系和配置，并通过一条命令启动、停止和扩展整个应用程序的容器集群。</li>\n<li>跨平台支持：Docker可以在不同的操作系统上运行，包括Linux、Windows和MacOS等。对于Linux平台，Docker直接使用操作系统的容器功能；而对于Windows和MacOS，Docker使用一个轻量级的虚拟机（称为Docker Desktop）来提供容器化环境。</li>\n<li>生态系统：Docker拥有庞大的开发者社区和丰富的生态系统。社区提供了大量的文档、教程和示例代码，以及交流和支持的平台。此外，还有许多第三方工具和服务，如监控工具、CI&#x2F;CD集成等，与Docker集成，进一步扩展了其功能和用途。</li>\n</ul>\n<p>总结起来，Docker是一个强大的容器化平台，通过将应用程序及其依赖项打包到独立的容器中，提供了更加灵活、可移植和可扩展的应用部署和管理方式。它已经成为现代软件开发和运维的重要工具之一。</p>\n<h2 id=\"二、docker-compose是什么？\"><a href=\"#二、docker-compose是什么？\" class=\"headerlink\" title=\"二、docker compose是什么？\"></a>二、docker compose是什么？</h2><p>Docker Compose是一个用于定义和管理多个Docker容器的工具。它允许您使用简单的YAML文件描述应用程序中的服务、网络、存储卷等配置，并通过一个命令行界面来启动、停止和管理这些容器。</p>\n<p>以下是Docker Compose的一些重要特点：</p>\n<ul>\n<li>声明式语法：Docker Compose使用声明式的YAML文件来描述应用程序的架构和配置。您可以在文件中定义每个服务的镜像、端口映射、环境变量、依赖关系等。这种声明式语法使得定义和管理复杂的容器集群变得简单且可维护。</li>\n<li>多容器应用管理：Docker Compose专注于管理多个相关的容器，以构建完整的应用程序堆栈。通过一次性的命令，您可以启动、停止、重启和销毁整个容器集群，而不需要手动处理每个容器。</li>\n<li>容器间连接和通信：使用Docker Compose，您可以轻松地为容器之间创建连接和网络。您可以定义容器之间的连接方式，使它们能够相互通信和访问。这在构建微服务架构或多层应用程序时非常有用。</li>\n<li>可伸缩性和负载均衡：Docker Compose允许您设置容器的伸缩策略，以根据应用程序的需要自动扩展或收缩容器。它还支持与负载均衡器集成，可以将流量分发到多个实例上，提高应用程序的性能和可靠性。</li>\n<li>环境隔离和测试：使用Docker Compose，您可以轻松地在开发和测试环境中复制生产环境的配置。您可以创建一个本地的容器化开发环境，确保应用程序在不同环境下的一致性，并减少由于环境差异引起的问题。</li>\n<li>可插拔的架构：Docker Compose是可插拔的，可以与其他工具和服务集成，以满足特定需求。例如，您可以与监控和日志记录工具集成，以监视和管理容器的性能和状态。</li>\n</ul>\n<p>Compose V1语法： Compose V1语法是较早版本的Compose语法，其文件名通常为docker-compose.yml。以下是一些Compose V1语法的特点：</p>\n<ul>\n<li>services：使用services关键字定义要运行的服务。每个服务都有一个名称和一组配置选项。</li>\n<li>image：指定要使用的镜像名称。</li>\n<li>ports：定义要映射到主机上的容器端口。</li>\n<li>volumes：指定要挂载到容器中的卷。</li>\n<li>links：定义与其他服务之间的连接。</li>\n<li>environment：设置容器中的环境变量。</li>\n<li>depends_on：定义服务之间的依赖关系。</li>\n</ul>\n<p>以下是一个Compose V1语法的示例：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">version: <span class=\"string\">&#x27;2&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">services:</span><br><span class=\"line\">  web:</span><br><span class=\"line\">    image: nginx:latest</span><br><span class=\"line\">    ports:</span><br><span class=\"line\">      - 8080:80</span><br><span class=\"line\">    volumes:</span><br><span class=\"line\">      - ./html:/usr/share/nginx/html</span><br><span class=\"line\"></span><br><span class=\"line\">  db:</span><br><span class=\"line\">    image: mysql:latest</span><br><span class=\"line\">    environment:</span><br><span class=\"line\">      - MYSQL_ROOT_PASSWORD=secret</span><br></pre></td></tr></table></figure>\n\n<p>Compose V2语法： Compose V2语法是较新版本的Compose语法，其文件名通常为docker-compose.yaml或docker-compose.yml。以下是一些Compose V2语法的特点：</p>\n<p>services：与Compose V1相同，使用services关键字定义要运行的服务。<br>image、ports、volumes、environment等选项与Compose V1相同。<br>引入了新的配置选项，如networks、configs和secrets，用于更灵活地定义网络、配置文件和机密信息。<br>以下是一个Compose V2语法的示例：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">version: <span class=\"string\">&#x27;3&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">services:</span><br><span class=\"line\">  web:</span><br><span class=\"line\">    image: nginx:latest</span><br><span class=\"line\">    ports:</span><br><span class=\"line\">      - 8080:80</span><br><span class=\"line\">    volumes:</span><br><span class=\"line\">      - ./html:/usr/share/nginx/html</span><br><span class=\"line\"></span><br><span class=\"line\">  db:</span><br><span class=\"line\">    image: mysql:latest</span><br><span class=\"line\">    environment:</span><br><span class=\"line\">      - MYSQL_ROOT_PASSWORD=secret</span><br><span class=\"line\"></span><br><span class=\"line\">networks:</span><br><span class=\"line\">  app-net:</span><br><span class=\"line\">    driver: bridge</span><br></pre></td></tr></table></figure>\n\n<p>除了以上介绍的不同之外，Compose V2语法还带来了一些其他改进和功能增强，例如支持多个文件的扩展性，可选项的验证和默认值等。</p>\n<p>需要注意的是，在使用Docker Compose时，要根据您所使用的Compose版本选择正确的语法，并确保在编写Compose文件时遵循该版本的语法规范。</p>\n<h2 id=\"三、Ubuntu-24-04版本安装\"><a href=\"#三、Ubuntu-24-04版本安装\" class=\"headerlink\" title=\"三、Ubuntu-24.04版本安装\"></a>三、Ubuntu-24.04版本安装</h2><p>最新用了最新的Ubuntu-24.04系统，发现以前的安装脚本会报错，不确定是不是24.04开始改变的，24.04只需要执行：<code>snap install docker</code> 就可以安装了。其他版本你也可以先试试用snap install docker安装，不行再试下面的方法。</p>\n<h2 id=\"四、旧版本安装步骤\"><a href=\"#四、旧版本安装步骤\" class=\"headerlink\" title=\"四、旧版本安装步骤\"></a>四、旧版本安装步骤</h2><h3 id=\"1、Ubuntu-安装脚本\"><a href=\"#1、Ubuntu-安装脚本\" class=\"headerlink\" title=\"1、Ubuntu 安装脚本\"></a>1、Ubuntu 安装脚本</h3><p>代码如下（示例）：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#!/bin/bash</span><br><span class=\"line\"># 卸载当前版本</span><br><span class=\"line\">echo <span class=\"string\">&quot;卸载当前版本.....&quot;</span></span><br><span class=\"line\">sudo apt-get remove docker docker-engine docker.io containerd runc</span><br><span class=\"line\">y</span><br><span class=\"line\"># 设置apt源</span><br><span class=\"line\">echo <span class=\"string\">&quot;设置apt源.....&quot;</span></span><br><span class=\"line\">sudo apt-get update</span><br><span class=\"line\"></span><br><span class=\"line\"># 安装基础依赖</span><br><span class=\"line\">echo <span class=\"string\">&quot;安装基础依赖.....&quot;</span></span><br><span class=\"line\">sudo apt-get install -y \\</span><br><span class=\"line\">    ca-certificates \\</span><br><span class=\"line\">    curl \\</span><br><span class=\"line\">    gnupg</span><br><span class=\"line\"></span><br><span class=\"line\"># 启用docker官方的源</span><br><span class=\"line\">echo <span class=\"string\">&quot;启用docker官方的源.....&quot;</span></span><br><span class=\"line\">echo \\</span><br><span class=\"line\">  <span class=\"string\">&quot;deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \\</span></span><br><span class=\"line\"><span class=\"string\">  $(. /etc/os-release &amp;&amp; echo $VERSION_CODENAME) stable&quot;</span> | \\</span><br><span class=\"line\">  sudo tee /etc/apt/sources.<span class=\"built_in\">list</span>.d/docker.<span class=\"built_in\">list</span> &gt; /dev/null</span><br><span class=\"line\"></span><br><span class=\"line\"># 添加docker官方的GPG Key</span><br><span class=\"line\">echo <span class=\"string\">&quot;添加docker官方的GPG Key.....&quot;</span></span><br><span class=\"line\">sudo mkdir -m <span class=\"number\">0755</span> -p /etc/apt/keyrings</span><br><span class=\"line\">curl -fsSL https:<span class=\"comment\">//download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg</span></span><br><span class=\"line\"></span><br><span class=\"line\"># 更新软件源</span><br><span class=\"line\">## 更新密钥权限，可选 sudo chmod a+r /etc/apt/keyrings/docker.gpg</span><br><span class=\"line\">echo <span class=\"string\">&quot;更新软件源.....&quot;</span></span><br><span class=\"line\">sudo apt-get update</span><br><span class=\"line\"></span><br><span class=\"line\">echo <span class=\"string\">&quot;安装最新版本或特定版本(Y（最新）/N（特定）)?&quot;</span></span><br><span class=\"line\">read answer</span><br><span class=\"line\"><span class=\"keyword\">if</span> [ <span class=\"string\">&quot;$answer&quot;</span> == <span class=\"string\">&quot;Y&quot;</span> -o <span class=\"string\">&quot;$answer&quot;</span> == <span class=\"string\">&quot;y&quot;</span> ]; then</span><br><span class=\"line\">    echo <span class=\"string\">&quot;安装最新版本&quot;</span></span><br><span class=\"line\">    # 安装最新版本</span><br><span class=\"line\">    sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin</span><br><span class=\"line\">elif [ <span class=\"string\">&quot;$answer&quot;</span> == <span class=\"string\">&quot;N&quot;</span> -o <span class=\"string\">&quot;$answer&quot;</span> == <span class=\"string\">&quot;n&quot;</span> ]; then</span><br><span class=\"line\">    echo <span class=\"string\">&quot;查询版本&quot;</span></span><br><span class=\"line\">    ## 查询版本</span><br><span class=\"line\">    apt-cache madison docker-ce | awk <span class=\"string\">&#x27;&#123; print $3 &#125;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    echo <span class=\"string\">&quot;请指定版本：</span></span><br><span class=\"line\"><span class=\"string\">    例如5:20.10.23~3-0~ubuntu-bionic、5:20.10.23~3-0~ubuntu-focal、5:20.10.23~3-0~ubuntu-jammy&quot;</span></span><br><span class=\"line\">    read VERSION_STRING</span><br><span class=\"line\">    # 安装特定版本</span><br><span class=\"line\"></span><br><span class=\"line\">    # ## 安装特定版本 ubuntu <span class=\"number\">18.04</span></span><br><span class=\"line\">    # VERSION_STRING=<span class=\"number\">5</span>:<span class=\"number\">20.10</span><span class=\"number\">.23</span>~<span class=\"number\">3</span><span class=\"number\">-0</span>~ubuntu-bionic</span><br><span class=\"line\"></span><br><span class=\"line\">    # ## 安装特定版本 ubuntu <span class=\"number\">20.04</span></span><br><span class=\"line\">    # VERSION_STRING=<span class=\"number\">5</span>:<span class=\"number\">20.10</span><span class=\"number\">.23</span>~<span class=\"number\">3</span><span class=\"number\">-0</span>~ubuntu-focal</span><br><span class=\"line\"></span><br><span class=\"line\">    # ## 安装特定版本 ubuntu <span class=\"number\">22.04</span></span><br><span class=\"line\">    # VERSION_STRING=<span class=\"number\">5</span>:<span class=\"number\">20.10</span><span class=\"number\">.23</span>~<span class=\"number\">3</span><span class=\"number\">-0</span>~ubuntu-jammy</span><br><span class=\"line\"></span><br><span class=\"line\">    ## 安装</span><br><span class=\"line\">    sudo apt-get install -y docker-ce=$VERSION_STRING docker-ce-cli=$VERSION_STRING containerd.io docker-compose-plugin</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">    echo <span class=\"string\">&quot;无效的输入&quot;</span></span><br><span class=\"line\">fi</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-生成脚本\"><a href=\"#2-生成脚本\" class=\"headerlink\" title=\"2.生成脚本\"></a>2.生成脚本</h3><p>将上述命令保存为一个脚本文件（例如script.sh），并添加执行权限。您可以在终端中使用以下命令来执行该脚本：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">chmod</span> +x script.sh</span><br><span class=\"line\">./script.sh</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-启动和验证\"><a href=\"#3-启动和验证\" class=\"headerlink\" title=\"3.启动和验证\"></a>3.启动和验证</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看docker</span></span><br><span class=\"line\">docker -v</span><br><span class=\"line\"><span class=\"comment\"># 老版本docker compose命令为</span></span><br><span class=\"line\">docker-compose -v</span><br><span class=\"line\"><span class=\"comment\"># 新版本docker compose命令为</span></span><br><span class=\"line\">docker compose version</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看docker服务是否启动</span></span><br><span class=\"line\">$ systemctl status docker</span><br><span class=\"line\"><span class=\"comment\"># 若未启动，则启动docker服务</span></span><br><span class=\"line\">$ <span class=\"built_in\">sudo</span> systemctl start docker</span><br><span class=\"line\"><span class=\"comment\"># 验证hello world</span></span><br><span class=\"line\">$ <span class=\"built_in\">sudo</span> docker run hello-world</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"五、卸载步骤\"><a href=\"#五、卸载步骤\" class=\"headerlink\" title=\"五、卸载步骤\"></a>五、卸载步骤</h2><h3 id=\"1-Ubuntu卸载脚本\"><a href=\"#1-Ubuntu卸载脚本\" class=\"headerlink\" title=\"1.Ubuntu卸载脚本\"></a>1.Ubuntu卸载脚本</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 卸载旧版本的Docker</span></span><br><span class=\"line\">yum remove docker \\</span><br><span class=\"line\">                  docker-client \\</span><br><span class=\"line\">                  docker-client-latest \\</span><br><span class=\"line\">                  docker-common \\</span><br><span class=\"line\">                  docker-latest \\</span><br><span class=\"line\">                  docker-latest-logrotate \\</span><br><span class=\"line\">                  docker-logrotate \\</span><br><span class=\"line\">                  docker-selinux \\</span><br><span class=\"line\">                  docker-engine-selinux \\</span><br><span class=\"line\">                  docker-engine \\</span><br><span class=\"line\">                  docker-ce</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">rm</span> -rf /etc/docker</span><br><span class=\"line\"><span class=\"built_in\">rm</span> -rf /run/docker</span><br><span class=\"line\"><span class=\"built_in\">rm</span> -rf /var/lib/dockershim</span><br><span class=\"line\"><span class=\"comment\">#删除docker的镜像文件</span></span><br><span class=\"line\"><span class=\"built_in\">rm</span> -rf /var/lib/docker</span><br><span class=\"line\"></span><br><span class=\"line\">ps -ef|grep docker|grep -v grep|xargs <span class=\"built_in\">kill</span> -s 9</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#卸载docker相关包</span></span><br><span class=\"line\">yum remove docker-*</span><br><span class=\"line\"></span><br><span class=\"line\">yum remove docker-ce-cli-*</span><br><span class=\"line\">yum remove docker-scan-plugin*</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 删除旧版docker-compose</span></span><br><span class=\"line\"><span class=\"built_in\">rm</span> -rf /usr/local/bin/docker-compose</span><br><span class=\"line\"><span class=\"built_in\">rm</span> -rf /usr/bin/docker-compose</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-保存文件后设置执行权限\"><a href=\"#2-保存文件后设置执行权限\" class=\"headerlink\" title=\"2.保存文件后设置执行权限\"></a>2.保存文件后设置执行权限</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">chmod</span> +777  docker-uninstall.sh</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-运行文件\"><a href=\"#3-运行文件\" class=\"headerlink\" title=\"3.运行文件\"></a>3.运行文件</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sh  docker-uninstall.sh</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-验证是否删除成功\"><a href=\"#4-验证是否删除成功\" class=\"headerlink\" title=\"4.验证是否删除成功\"></a>4.验证是否删除成功</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker -v</span><br><span class=\"line\">docker-compose -v</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"六、CentOS\"><a href=\"#六、CentOS\" class=\"headerlink\" title=\"六、CentOS\"></a>六、CentOS</h2><h3 id=\"安装脚本\"><a href=\"#安装脚本\" class=\"headerlink\" title=\"安装脚本\"></a>安装脚本</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\">\t<span class=\"comment\"># 卸载当前版本</span></span><br><span class=\"line\">\t<span class=\"built_in\">echo</span> <span class=\"string\">&quot;卸载当前版本.....&quot;</span></span><br><span class=\"line\">\t<span class=\"built_in\">sudo</span> yum remove docker-ce docker-ce-cli containerd.io</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\"># 设置yum源</span></span><br><span class=\"line\">\t<span class=\"built_in\">echo</span> <span class=\"string\">&quot;设置yum源.....&quot;</span></span><br><span class=\"line\">\t<span class=\"built_in\">sudo</span> yum install -y yum-utils</span><br><span class=\"line\">\t<span class=\"built_in\">sudo</span> yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\"># 安装基础依赖</span></span><br><span class=\"line\">\t<span class=\"built_in\">echo</span> <span class=\"string\">&quot;安装基础依赖.....&quot;</span></span><br><span class=\"line\">\t<span class=\"built_in\">sudo</span> yum install -y \\</span><br><span class=\"line\">\t    yum-plugin-copr \\</span><br><span class=\"line\">\t    device-mapper-persistent-data \\</span><br><span class=\"line\">\t    lvm2 \\</span><br><span class=\"line\">\t    git \\</span><br><span class=\"line\">\t    bash-completion \\</span><br><span class=\"line\">\t    bash-completion-extras \\</span><br><span class=\"line\">\t    iptables \\</span><br><span class=\"line\">\t    policycoreutils-python \\</span><br><span class=\"line\">\t    selinux-policy-base \\</span><br><span class=\"line\">\t    selinux-policy-targeted \\</span><br><span class=\"line\">\t    audit \\</span><br><span class=\"line\">\t    libseccomp-devel \\</span><br><span class=\"line\">\t    python3-pip \\</span><br><span class=\"line\">\t    python3-setuptools \\</span><br><span class=\"line\">\t    python3-wheel</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\"># 更新软件源</span></span><br><span class=\"line\">\t<span class=\"built_in\">echo</span> <span class=\"string\">&quot;更新软件源.....&quot;</span></span><br><span class=\"line\">\t<span class=\"built_in\">sudo</span> yum update -y</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">echo</span> <span class=\"string\">&quot;安装最新版本或特定版本(Y（最新）/N（特定）)?&quot;</span></span><br><span class=\"line\">\t<span class=\"built_in\">read</span> answer</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> [ <span class=\"string\">&quot;<span class=\"variable\">$answer</span>&quot;</span> == <span class=\"string\">&quot;Y&quot;</span> -o <span class=\"string\">&quot;<span class=\"variable\">$answer</span>&quot;</span> == <span class=\"string\">&quot;y&quot;</span> ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">\t    <span class=\"built_in\">echo</span> <span class=\"string\">&quot;安装最新版本&quot;</span></span><br><span class=\"line\">\t    <span class=\"comment\"># 安装最新版本</span></span><br><span class=\"line\">\t    <span class=\"built_in\">sudo</span> yum install -y docker-ce docker-ce-cli containerd.io</span><br><span class=\"line\">\t<span class=\"keyword\">elif</span> [ <span class=\"string\">&quot;<span class=\"variable\">$answer</span>&quot;</span> == <span class=\"string\">&quot;N&quot;</span> -o <span class=\"string\">&quot;<span class=\"variable\">$answer</span>&quot;</span> == <span class=\"string\">&quot;n&quot;</span> ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">\t    <span class=\"built_in\">echo</span> <span class=\"string\">&quot;查询版本&quot;</span></span><br><span class=\"line\">\t    <span class=\"comment\">## 查询版本</span></span><br><span class=\"line\">\t    yum list docker-ce --showduplicates | grep -i <span class=\"string\">&quot;docker-ce&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t    <span class=\"built_in\">echo</span> <span class=\"string\">&quot;请指定版本：</span></span><br><span class=\"line\"><span class=\"string\">\t    例如3:20.10.11-3.el7、3:20.10.11-3.el8&quot;</span></span><br><span class=\"line\">\t    <span class=\"built_in\">read</span> VERSION_STRING</span><br><span class=\"line\">\t    <span class=\"comment\"># 安装特定版本</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t    <span class=\"comment\">## 安装特定版本 centos 7</span></span><br><span class=\"line\">\t    <span class=\"comment\"># VERSION_STRING=3:20.10.11-3.el7</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t    <span class=\"comment\">## 安装特定版本 centos 8</span></span><br><span class=\"line\">\t    <span class=\"comment\"># VERSION_STRING=3:20.10.11-3.el8</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t    <span class=\"comment\">## 安装</span></span><br><span class=\"line\">\t    <span class=\"built_in\">sudo</span> yum install -y docker-ce-<span class=\"variable\">$VERSION_STRING</span> docker-ce-cli-<span class=\"variable\">$VERSION_STRING</span> containerd.io</span><br><span class=\"line\">\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t    <span class=\"built_in\">echo</span> <span class=\"string\">&quot;无效的输入&quot;</span></span><br><span class=\"line\">\t<span class=\"keyword\">fi</span></span><br><span class=\"line\">\t<span class=\"comment\"># 启动Docker服务</span></span><br><span class=\"line\">\t<span class=\"built_in\">echo</span> <span class=\"string\">&quot;启动Docker服务.....&quot;</span></span><br><span class=\"line\">\t<span class=\"built_in\">sudo</span> systemctl start docker</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\"># 设置Docker开机自启</span></span><br><span class=\"line\">\t<span class=\"built_in\">echo</span> <span class=\"string\">&quot;设置Docker开机自启.....&quot;</span></span><br><span class=\"line\">\t<span class=\"built_in\">sudo</span> systemctl <span class=\"built_in\">enable</span> docker</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\"># 配置Docker加速器</span></span><br><span class=\"line\">\t<span class=\"built_in\">echo</span> <span class=\"string\">&quot;配置Docker加速器.....&quot;</span></span><br><span class=\"line\">\t<span class=\"built_in\">echo</span> <span class=\"string\">&#x27;&#123;</span></span><br><span class=\"line\"><span class=\"string\">\t  &quot;registry-mirrors&quot;: [&quot;https://your_mirror_url&quot;]</span></span><br><span class=\"line\"><span class=\"string\">\t&#125;&#x27;</span> | <span class=\"built_in\">sudo</span> <span class=\"built_in\">tee</span> /etc/docker/daemon.json</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\"># 重启Docker服务</span></span><br><span class=\"line\">\t<span class=\"built_in\">echo</span> <span class=\"string\">&quot;重启Docker服务.....&quot;</span></span><br><span class=\"line\">\t<span class=\"built_in\">sudo</span> systemctl daemon-reload</span><br><span class=\"line\">\t<span class=\"built_in\">sudo</span> systemctl restart docker</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">echo</span> <span class=\"string\">&quot;Docker安装完成&quot;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"卸载脚本\"><a href=\"#卸载脚本\" class=\"headerlink\" title=\"卸载脚本\"></a>卸载脚本</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"><span class=\"comment\"># 停止和删除所有Docker容器</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;停止和删除所有Docker容器.....&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">sudo</span> docker stop $(<span class=\"built_in\">sudo</span> docker ps -aq)</span><br><span class=\"line\"><span class=\"built_in\">sudo</span> docker <span class=\"built_in\">rm</span> $(<span class=\"built_in\">sudo</span> docker ps -aq)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 卸载Docker服务</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;卸载Docker服务.....&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">sudo</span> yum remove -y docker-ce docker-ce-cli containerd.io</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 删除Docker相关文件和目录</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;删除Docker相关文件和目录.....&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">sudo</span> <span class=\"built_in\">rm</span> -rf /var/lib/docker</span><br><span class=\"line\"><span class=\"built_in\">sudo</span> <span class=\"built_in\">rm</span> -rf /etc/docker</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 删除Docker用户组</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;删除Docker用户组.....&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">sudo</span> groupdel docker</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 删除Docker存储库</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;删除Docker存储库.....&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">sudo</span> <span class=\"built_in\">rm</span> -f /etc/yum.repos.d/docker-ce.repo</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;Docker已成功卸载&quot;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>我们可以通过用户输入指令来安装不同版本的docker和docker compose，也可以一键卸载，使用脚本省心又快捷。</p>\n","feature":true,"text":"在新建的服务器上，我们一般会用几条命令来下载安装docker和docker-compose，这里为了避免每次都去搜索安装命令，所以写成脚本，本文仅支持Ubunt...","permalink":"/post/Ubuntu一键安装卸载docker","photos":[],"count_time":{"symbolsCount":"9.4k","symbolsTime":"9 mins."},"categories":[{"name":"DevOps","slug":"DevOps","count":11,"path":"api/categories/DevOps.json"}],"tags":[],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%80%E3%80%81docker%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F\"><span class=\"toc-text\">一、docker是什么？</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E3%80%81docker-compose%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F\"><span class=\"toc-text\">二、docker compose是什么？</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%89%E3%80%81Ubuntu-24-04%E7%89%88%E6%9C%AC%E5%AE%89%E8%A3%85\"><span class=\"toc-text\">三、Ubuntu-24.04版本安装</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%9B%9B%E3%80%81%E6%97%A7%E7%89%88%E6%9C%AC%E5%AE%89%E8%A3%85%E6%AD%A5%E9%AA%A4\"><span class=\"toc-text\">四、旧版本安装步骤</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1%E3%80%81Ubuntu-%E5%AE%89%E8%A3%85%E8%84%9A%E6%9C%AC\"><span class=\"toc-text\">1、Ubuntu 安装脚本</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-%E7%94%9F%E6%88%90%E8%84%9A%E6%9C%AC\"><span class=\"toc-text\">2.生成脚本</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-%E5%90%AF%E5%8A%A8%E5%92%8C%E9%AA%8C%E8%AF%81\"><span class=\"toc-text\">3.启动和验证</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BA%94%E3%80%81%E5%8D%B8%E8%BD%BD%E6%AD%A5%E9%AA%A4\"><span class=\"toc-text\">五、卸载步骤</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-Ubuntu%E5%8D%B8%E8%BD%BD%E8%84%9A%E6%9C%AC\"><span class=\"toc-text\">1.Ubuntu卸载脚本</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-%E4%BF%9D%E5%AD%98%E6%96%87%E4%BB%B6%E5%90%8E%E8%AE%BE%E7%BD%AE%E6%89%A7%E8%A1%8C%E6%9D%83%E9%99%90\"><span class=\"toc-text\">2.保存文件后设置执行权限</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-%E8%BF%90%E8%A1%8C%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">3.运行文件</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-%E9%AA%8C%E8%AF%81%E6%98%AF%E5%90%A6%E5%88%A0%E9%99%A4%E6%88%90%E5%8A%9F\"><span class=\"toc-text\">4.验证是否删除成功</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%85%AD%E3%80%81CentOS\"><span class=\"toc-text\">六、CentOS</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AE%89%E8%A3%85%E8%84%9A%E6%9C%AC\"><span class=\"toc-text\">安装脚本</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8D%B8%E8%BD%BD%E8%84%9A%E6%9C%AC\"><span class=\"toc-text\">卸载脚本</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%80%BB%E7%BB%93\"><span class=\"toc-text\">总结</span></a></li></ol>","author":{"name":"FaceMan","slug":"blog-author","avatar":"https://github.com/faceman0814/picx-images-hosting/raw/master/20241114/image.2vermeukr5.webp","link":"/","description":"从0开始，直到1。","socials":{"github":"https://github.com/faceman0814","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/manmanzainuli","juejin":"","customs":{"bokeyuan":{"icon":"/svg/bokeyuan.svg","link":"https://www.cnblogs.com/FaceMan"}}}},"mapped":true,"hidden":false,"prev_post":{"title":"DockerSwarm环境搭建","uid":"b41db14a99677b936cf320d0d9be73f1","slug":"DockerSwarm环境搭建","date":"2024-11-18T16:00:00.000Z","updated":"2024-11-29T09:33:04.458Z","comments":true,"path":"api/articles/DockerSwarm环境搭建.json","keywords":null,"cover":"https://github.com/faceman0814/picx-images-hosting/raw/master/20241116/image.7p3mlpbv6a.webp","text":"Swarm环境搭建系统规划 环境准备创建服务器新建三台虚拟机 节点 IP 系统 配置 存储 服务 manager 192.168.2.xx CentOS7.6 ...","permalink":"/post/DockerSwarm环境搭建","photos":[],"count_time":{"symbolsCount":"2.7k","symbolsTime":"2 mins."},"categories":[{"name":"DevOps","slug":"DevOps","count":11,"path":"api/categories/DevOps.json"}],"tags":[{"name":"Docker","slug":"Docker","count":6,"path":"api/tags/Docker.json"}],"author":{"name":"FaceMan","slug":"blog-author","avatar":"https://github.com/faceman0814/picx-images-hosting/raw/master/20241114/image.2vermeukr5.webp","link":"/","description":"从0开始，直到1。","socials":{"github":"https://github.com/faceman0814","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/manmanzainuli","juejin":"","customs":{"bokeyuan":{"icon":"/svg/bokeyuan.svg","link":"https://www.cnblogs.com/FaceMan"}}}}},"next_post":{}}